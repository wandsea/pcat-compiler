	 .text
	 .globl MainEntry

MainEntry:
	 pushl %ebp
	 movl %esp, %ebp
	 subl $20, %esp
	 andl $-16, %esp
	 movl $0, %eax
	 movl %eax, -4(%ebp)
	 movl $0, %eax
	 movl %eax, -8(%ebp)
	 movl $label_1, %eax
	 push %eax
	 call print_str
	 addl $4, %esp
	 call print_line
	 movl $1, %eax
	 movl %eax, -4(%ebp)
label_2:
	 movl -4(%ebp), %eax
	 movl $5, %ecx
	 cmpl %ecx, %eax
	 jg label_3
	 pushl %ebp
	 call FINDPOWER
	 addl $4, %esp
	 movl $label_4, %eax
	 push %eax
	 call print_str
	 addl $4, %esp
	 movl -4(%ebp), %eax
	 movl %eax, -12(%ebp)
	 movl -12(%ebp), %eax
	 push %eax
	 call print_int
	 addl $4, %esp
	 movl $label_5, %eax
	 push %eax
	 call print_str
	 addl $4, %esp
	 movl -8(%ebp), %eax
	 movl %eax, -16(%ebp)
	 movl -16(%ebp), %eax
	 push %eax
	 call print_int
	 addl $4, %esp
	 call print_line
	 movl -4(%ebp), %eax
	 movl $1, %ecx
	 addl %ecx, %eax
	 movl %eax, -4(%ebp)
	 jmp label_2
label_3:
	 leave
	 ret

FINDPOWER:
	 pushl %ebp
	 movl %esp, %ebp
	 subl $20, %esp
	 andl $-16, %esp
	 movl $0, %eax
	 movl %eax, -4(%ebp)
	 movl $1, %eax
	 movl 8(%ebp), %edx
	 movl %eax, -8(%edx)
	 movl $1, %eax
	 movl %eax, -4(%ebp)
label_6:
	 movl 8(%ebp), %edx
	 movl -4(%edx), %eax
	 movl %eax, -8(%ebp)
	 movl -4(%ebp), %eax
	 movl -8(%ebp), %ecx
	 cmpl %ecx, %eax
	 jg label_7
	 movl 8(%ebp), %edx
	 movl -8(%edx), %eax
	 movl %eax, -12(%ebp)
	 movl -12(%ebp), %eax
	 movl $2, %ecx
	 imull %ecx, %eax
	 movl %eax, -16(%ebp)
	 movl -16(%ebp), %eax
	 movl 8(%ebp), %edx
	 movl %eax, -8(%edx)
	 movl -4(%ebp), %eax
	 movl $1, %ecx
	 addl %ecx, %eax
	 movl %eax, -4(%ebp)
	 jmp label_6
label_7:
	 leave
	 ret

	 .section .rodata
label_1:
	 .string "Calculate the first 5 powers of 2:\0"

	 .section .rodata
label_4:
	 .string "2**\0"

	 .section .rodata
label_5:
	 .string " = \0"
